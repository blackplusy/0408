控制语句
也叫程序流程控制，分为判断和循环
流程图：
https://www.processon.com
1.选择语句(条件判断)
根据条件来选择一个任务分支语句统称，js提供if判断语句和switch判断语句
	a.if语句
	if语句测试的一个布尔类型表达式，如果结果为真则执行某段程序
		if ( 表达式 )         //条件判断语句
		｛
			语句组;           //满足条件时候所执行的程序代码
		｝
		注意：表达式必须要有，语句组可选，可以通过一条或者多条语句组成
		注意：if块语句的花括号必须是成对出现的，不能交叉嵌套
	b.if-else语句
	if语句根据表达式的值，决定是都执行某个任务，没有其他选择(只有2种选择)
		if （ 表达式 ）
		｛
			语句组;
		｝
		else
		{
			语句组;
		}
		注意：表达式必须要有，语句组都是可选可以由一条或者多条语句组成
	c.if-else-if语句
	当有多个可供判断的条件时候，单个if-else表达不完全，使用if-else-if语句，不是单独的语句
	而是由多个if-else组成，实现多路判断
		if ( 表达式 )
		｛
			语句组;
		｝
		else if ( 表达式 )
		{
			语句组;
		}
		...
		else
		{
			语句组;
		}
		注意：表达式必须要有，语句组可以一条或者多条语句组成
	d.switch语句
	使用if-else实现多路选择不易于维护，可以使用switch语句进行代替，给定多个选择中选择一个符合条件分支来执行
		switch （ 表达式 ）
		｛
		case 标识1:
			语句组;
		case 标识2:
			语句组;
		｝
2.循环语句
编程中有些指令需要执行多次，需要写入大量代码，计算机快速解决重复和繁琐峰做的，将重复执行语句放在循环中根据条件执行，js循环包括 for，while，do-while，for in ....

	a.for语句
	重复执行的代码使用for比较合适
	for ( 表达式1;表达式2;表达式3 )
	{
		语句组;
	}
	b.for in 语句
	for ( 变量 in 集合 )
	{
		语句组;
	}
	注意：变量作为集合中一个元素，当集合元素个数为0时候不执行循环体
	c.while语句
	当重复执行动作比较简单时候可以使用while语句替代for循环，while循环在执行循环体之前测试一个条件，如果条件成立进入到循环体，否则调到循环体后的第一条语句
	while ( 条件表达式 )
	{
		语句组;
	}
	注意：条件表达式必选项，无论返回什么类型的值都是作为布尔类型处理
	d.do-while语句
	while循环进入循环前先测试条件表达式是否成立，而do while 循环先执行一遍循环体。循环体内语句执行后再测试表达式，如果成立，进行下一轮测试
	do  {
		语句组;
	} while( 条件表达式 );
	

	
		
