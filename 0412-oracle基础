1.oracle基础
a.oracle的版本
	8i
	9i            i:internet
	10g
	11g           g:grid
	12c   		  c:cloud
b.oracle的管理工具
	sqlplus                命令界面
	isqlplus               
	em  				   企业管理器
	pl/sql developer       开发用(win)
	sql developer          oracle官方自带
	toad
	navicat
c.oracle数据库的安装
	测试：oracle10g
	开发：oracle11g(client不要)
	1、解压database压缩包
	2.关闭电脑中的vmware、mongodb、mysql服务
		注意：计算机--管理--服务和应用程序--服务
		启动类型：禁用，服务状态：停止
	3.进入到解压后的database文件夹中
	4.右键setup.exe--兼容性疑难解答--启动程序
	注意：密码不要以数字开头
d.oracle的架构
	c---------/---------s
	client            server
	d1.服务端
		需要启动的服务：
		oracle主服务    Oracle....ORCL
		命令方式检查主服务
			sqlplus / as sysdba           管理员登录本地数据库
			select status from v$instance 查看当实例状态(open说明正常)
		补充：
			开启数据库实例
				startup;
			关闭数据库实例
				shutdown immedate
		oracle监听服务  Oracle....listener
		命令方式检查oracle的监听服务
			lsnrctl status   查看监听的状态
			lsnrctl start    启动监听服务
			lsnrctl stop     关闭监听服务
	d2.客户端
		客户端配置文件
		D:\oracle\product\10.2.0\db_1\NETWORK\ADMIN\tnsnames.ora
		ORCL =                                      #标签
		  (DESCRIPTION =
		    (ADDRESS = (PROTOCOL = TCP)(HOST = USER-20180301NK)(PORT = 1521))#协议、主机名(IP)、端口
		    (CONNECT_DATA =                                             
		      (SERVER = DEDICATED)
		      (SERVICE_NAME = orcl)#实例名
		    )
		  )
		测试tns配置文件是否配置正确，是否可以连接oracle数据库
		tnsping 标签
		注意：如果是OK说明配置正确
		oracle的默认端口是1521
e.oracle的登录
	sqlplus / as sysdba
		管理员登录本地数据库
	sqlplus scott@orcl
		scott用户登录标签为orcl的数据库
	sqlplus sys@orcl as sysdba
		管理员用户登录标签为orcl的数据，管理员身份
	注意：oracle2个管理员：sys，system
f.用户和权限
	oracle2管理员，管理员在登录系统时候必须使用sysdba角色
	只有sys和system可以使用sysdba角色
	角色：权限的集合
	normal 		普通用户权限
	sysoper     系统操作员权限
	sysdba      管理员权限
	用户：
		创建用户(管理员)
		语法：create user 用户名 identified by 密码;
		创建用户kobe，密码nba
		create user kobe identified by nba;
		修改用户
		修改密码语法：alter user 用户 identified by 密码;
		修改kobe用户密码为cba
		锁定和解锁用户：alter user 用户 identified by 密码 account unlock;
		解锁scott用户
		alter user scott identified by tiger account unlock;
		锁定用户scott
		alter user scott account lock;
		删除用户
		语法：drop user 用户 [cascade];
		删除kobe用户
		drop user kobe;

	权限
		CONNECT   	连接数据库权限
		resource    调用数据库资源权限
		dba         管理员权限
		当创建一个新的用户的时候我们会给connect和resource权限
		a.授权
		语法：grant 权限 to 用户;
		赋予kobe用户connect和resource权限
		grant connect,resource to kobe;
		b.回收授权
		语法：revoke 权限 from 用户;
		取消kobe用户的connect和resource权限
		revoke connect,resource from kobe;

怎样连接其他人数据库
	heygor---------------------------------袁剑
                                          192.168.6.205
                                          主服务
                                          监听服务
    tns配置
    IP：192.168.6.205
    协议：TCP
    端口：1521
    实例：orcl
	1.确定目标IP地址(你要连接哪个IP地址)
	2.确定目标的主服务和监听必须启动
	3.tns配置
	4.测试tns是否可以ping通
	5.登录
		sqlplus kobe/nba@yj
		sqlplus sys@yj as sysdba


g.oracle的表结构
	1.oracle的常用数据类型
		字符  char varchar varchar2
		数字  number int
		日期  date
		语法：create table 表(
			列 数据类型 约束，
			列 数据类型 约束
		)；
	2.常见约束
		主键        列中的数据唯一，每张表中只有一个主键，非空
		唯一        列中数据唯一，一张表可以有多个，可以为空
		非空        列中的数据不能为空
		检查        列中的数据是否满足条件
		外键(参考)  列中的数据依赖于另外一张表中的列
		a.主键约束
		创建表bank，流水号(bid)主键约束，业务人员名字（name） 字符类型
		create table bank(
			bid number primary key,
			name char(20)
			);
		insert into bank values(1,'a')
		insert into bank values(1,'b')
		b.唯一约束
		c.非空约束
		创建表student，学生名字name 字符类型，不能为空，年龄 age 数字类型
		create table student(
			name char(10) not null,
			age number
		);
		insert into student values('a',18);
		insert into student(age) values(20);
		d.检查约束
		创建表xs，名字 字符类型，性别 字符类型只能是男或者女
		create table xs(
		    name char(10),
		    sex char(10) check(sex='男' or sex='女')
		);
		insert into xs values('a','男');
		insert into xs values('b','中');
		e.外键约束
		被参考表的被参考列一定存在
		参考列和被参考列数据类型必须一致
		被参考列一定是主键约束
		create table kh(
			khid number primary key,
			khinfo char(10)
		);
        insert into kh values(1,'a');
        insert into kh values(2,'b');

		create table dd(
			khid number references kh(khid),
			ddinfo char(10)
		);
        insert into dd values(1,'xxx');
        insert into dd values(3,'xxx');
 h.事务
 	一件事有开始就必须有结束
 	heygor----bank----大佬们
 	commit		把数据提交到数据库中，除非人为修改否则不会变化
 	rollback    把数据库状态退回到最后一次提交的状态
 	注意：DML语句会触发事务的开始
 	DML：新增  修改  删除(insert update delete)
 i.数据的新增
 	字符类型加单引号
 	数字类型直接使用
 	日期类型加to_date函数
 	语法：insert into 表 values(值1，值2....)；
 	     insert into 表(列1，列2) values(值1，值2)；
 	创建学生表(st),学生名字(name)字符类型，生日日期类型，年龄 数字类型
 	create table st(
 		name char(20),
 		birthday date,
 		age number
 	);
 	向st表中新增数据，名字，gaga，生日当前日期，年龄18
	insert into st values('gaga',sysdate,18);
	向st表中新增数据，名字，ladeng，生日 2000-01-01
	insert into st(name,birthday) values('ladeng',to_date('2000-01-01','YYYY-MM-DD'));
j.数据的修改
	语法：update 表 set 列=值 where 条件;
	修改st表中名字为gaga的年龄为80
	update st set age=80 where name='gaga';
	commit;
	如果不加where条件修改的是整个列的数据、
	修改名字是ladeng的名字修改为o8ma,年龄修改为200
	update st set name='08ma',age=200 where name='ladeng';
	commit;
k.数据的删除
	注意：数据删除后表结构仍然存在
	注意：自增序列初始化使用truncate
	delete语法:
	delete 表 where 条件;
	删除st表中名字为gaga的数据
	delete st where name='gaga';
	commit;
	truncate语法：
	truncate table 表;
	删除st表中所有数据
	truncate table st;
l.数据查询
	select 列 from 表 where 条件
		group by 分组条件
			having 分组后过滤条件
				order by 排序条件；
	a.简单查询
		select * from emp;
		select * from emp where ename='SCOTT';
		select sal from emp where ename='SCOTT';
	b.where子句
		比较
			>
			<
			=
			>=
			<=
			<>
			!=
		查询emp表中工资大于2000的所有信息
		select * from emp where sal>2000;
		查询emp表中名字不是SCOTT的人的名字
		select ename from emp where ename!='SCOTT';
		关系
			and
			or
			not
		查询emp表中名字是KING或者ALLEN的所有信息
		select * from emp where ename='KING' or ename='ALLEN';
		区间
			between...and...
		查询emp表中公司范围800和1600之间所有信息
		select * from emp where sal between 800 and 1600;
		模糊查询
			like
			_
			%
		查询emp表中名字S开头的所有数据
		select * from emp where ename like'S%';
		空值查询
		空值：没有任何数据类型，没有任何的值，不能用于比较和运算，查询时候使用is null或者is not null
			查询emp表中佣金为空的所有数据
			select * from emp where comm is null;
			补充：nvl(判断数据是否为空的列，如果为空显示成什么)
			查询emp表中名字和佣金，佣金如果为空，显示0
			select ename,nvl(comm,0) from emp;
		in 在...里面(不是范围) 
			查询emp表中名字是KING或者ALLEN的所有信息
			select * from emp where ename in ('KING','ALLEN');
		常用的函数
			upper    大写
			lower 	 小写
			round    小数点后保留几位
			initcap  首字母大写
		select ename,lower(ename),initcap(ename) from emp;



























